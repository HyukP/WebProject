html 
    head 
        title tutoring List
        link(rel='stylesheet', href='/stylesheets/requestList.css')
        script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js") 
    body
       nav(class="nav")
            ul(class="navbar__menu")
                div(class="home")
                    a(href="../")
                        img(src="https://i.ibb.co/mzbZKrX/home-page.png" alt="home" style="width:30px;height:30px;")
                div(class="menu_group")
                    div(class="other")
                        a(id="1" href="../tutorList/") 튜터 찾기
                    div(class="other")
                        a(id="2" href="../post/") 질문/답변
                    div(class="other") 
                        a(id="3" href="../findPost/") 찾아요
                    div(class="current")
                        a(id="4" href="./") 멘토링 목록
                    div(class="other")
                        a(id="5" href="../requestList/") 받은 요청
                    div(class="other")
                        a(id="6" href="../sendList/") 보낸 요청
        div(class="requestBox")
            -if(rows!=null)
                div(class="requestList") 
                    -for(var i=0;i<rows.length;i++)
                        div(class="request")
                            div(id="UserArea #{i}" class="UserArea")
                                td Tutee : 
                                td #{rows[i].sendUser}
                                br
                                td Tutor : 
                                td #{rows[i].targetUser}
                            div(id="Content #{i}" class="ContentArea")
                                td Content : 
                                td #{rows[i].content}
                            div(id="btns #{i}" class="tutoringArea")
                                button(class="tutoringButton") 
                                    a(href="./meeting?meeting_id=#{rows[i].id}&targetUser_id=#{rows[i].targetUser}") 미팅 요청
                                button(id="chatroom #{rows[i].chatroom_id}" class="tutoringButton" onClick="joinChatroom(id)") 채팅
                                button(class="meeting" onClick="printData(#{rows[i].id})") 미팅 정보
                div(class="meetingInfo")
                    div(class="Place")
                        img(src="" style="margin-left:80px;margin-right:auto;")
                        div(class="place2")
                            h4 장소 :   
                            h2 
                    div(class="Date")
                        div(class="date2")
                            h4 날짜 :
                            h2
                    div(class="Content")
                        div(class="content2")
                            h4 요청 사항 :
                            h2
                    div(class="User")
                    div(class="close")
                        button(id="status")
                        button(id="tutorAccept" onClick="acceptMeeting()") 수락
                        button(id="tutorExit" onClick="endMeeting()") 종료
                        button(id="closeBtn" onClick="closeInfo()") 닫기
                    
                                
    script(type="text/javascript").
        const joinChatroom = (id) => {
            var id = id.split(' ')[1];
            document.location.href="./ChatTest?chatroom_id="+id;
        }
        const closeInfo = () => {
            document.querySelector("div.meetingInfo").style.display = "none";
        }
        const acceptMeeting = () => {
            var data = document.querySelector('div.User').value;
            console.log(data);
            axios.get('http://localhost:3000/home/tutoringList/updateMeeting',{
                method: 'POST',
                    params: {
                        id : data
                    },
                    headers: {
                        'Content-Type': 'application/json',
                    },
            }).then(response => {
                alert(response.data.message);
                document.getElementById('status').textContent = "진행중"
                document.getElementById('tutorAccept').style.display = "none";
                documnet.location.href="./";
            })
        }
        const endMeeting = () => {
            var data = document.querySelector('div.User').value;
            axios.get('http://localhost:3000/home/tutoringList/deleteMeeting',{
                method: 'POST',
                    params: {
                        id : data
                    },
                    headers: {
                        'Content-Type': 'application/json',
                    },
            }).then(response => {
                alert(response.data.message);
                document.querySelector('div.meetingInfo').style.display = "none";
            })
        }
        const printData = (data) => {
            document.querySelector('div.Place h2').textContent = "";
            document.querySelector('div.Date h2').textContent = "";
            document.querySelector('div.Content h2').textContent = "";
            axios.get('http://localhost:3000/home/tutoringList/getMeeting',{
                method: 'POST',
                    params: {
                        id : data
                    },
                    headers: {
                        'Content-Type': 'application/json',
                    },
            }).then(response => {
                if(response.data.status==200) {
                    var meetingData = response.data.results[0];
                    document.querySelector('div.User').value = meetingData.tutoring_id;
                    document.querySelector('div.meetingInfo').style.display = "flex";
                    document.querySelector('div.Place h2').textContent = document.querySelector('div.Place h2').textContent+ meetingData.meetingPlace;
                    document.querySelector('div.Date h2').textContent = document.querySelector('div.Date h2').textContent+ meetingData.meetingDate;
                    document.querySelector('div.Content h2').textContent = document.querySelector('div.Content h2').textContent+ meetingData.meetingContent;
                    document.querySelector('div.Place img').src = "https://maps.googleapis.com/maps/api/staticmap?center="+meetingData.meetingLocation.split(',')[0] + ',' + meetingData.meetingLocation.split(',')[1]+"&markers=color:red%7Clabel:C%7C"+meetingData.meetingLocation.split(',')[0] + ',' + meetingData.meetingLocation.split(',')[1]+"&zoom=17&size=350x256&maptype=roadmap&key=AIzaSyB2rc69gj7PhZRAnYJdbXap17G4CfIjhIs";
                    console.log(meetingData);
                    if(meetingData.targetUser!="#{username}"){
                        document.getElementById('tutorAccept').style.display = "none";
                        document.getElementById('tutorExit').style.display = "none";
                    }
                    if(meetingData.status=='WAIT') {
                        document.getElementById('status').textContent = "대기중"
                    }
                    if(meetingData.status=='DO') {
                        document.getElementById('status').textContent = "진행중"
                        document.getElementById('tutorAccept').style.display = "none";
                    }
                }
            })
        }
        const testTrans = () => {
            var lang = "#{lang}"
            if(lang=="China") {
               var text = document.querySelector('div.menu_group').innerText;
                axios.get('http://localhost:3000/translate',{
                    method: 'POST',
                    params: {
                        target : 'zh-CN',
                        text : text
                    },
                    headers: {
                        'Content-Type': 'application/json',
                    },
                }).then(response=> {
                    var list = response.data.message.result.translatedText.split('\n');
                    for(var i = 1; i<= 6; i++) {
                        document.getElementById(i).textContent = list[i-1];
                    }
                })
            } else if(lang=="French") {
                var text = document.querySelector('div.menu_group').innerText;
                    axios.get('http://localhost:3000/translate',{
                        method: 'POST',
                        params: {
                            target : 'fr',
                            text : text
                        },
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    }).then(response=> {
                        var list = response.data.message.result.translatedText.split('\n');
                        for(var i = 1; i<= 6; i++) {
                            document.getElementById(i).textContent = list[i-1];
                        }
                    })
            } else if(lang=="Vietnam") {
                var text = document.querySelector('div.menu_group').innerText;
                    axios.get('http://localhost:3000/translate',{
                        method: 'POST',
                        params: {
                            target : 'vi',
                            text : text
                        },
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    }).then(response=> {
                        var list = response.data.message.result.translatedText.split('\n');
                        for(var i = 1; i<= 6; i++) {
                            document.getElementById(i).textContent = list[i-1];
                        }
                    })
            }
        }
        testTrans();
