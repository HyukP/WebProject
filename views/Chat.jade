html 
    head 
        title Chat Room
        link(rel='stylesheet', href='/stylesheets/Chat.css')
        script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js") 
    style.
        .Bubble {
            padding : 5px;
            width : 50%;
            height : 75px;
            background-color: white;
            border-radius: 5px;
            margin-bottom : 10px;
        }
    body 
        nav(class="nav")
                div(class="menu_group")
                    div(class="home")
                        a(href="../")
                            img(src="https://i.ibb.co/ZSJQwCr/home-page.pngg" alt="home" style="width:30px;height:30px;")
                    div(class="other")
                        a(id="1" href="../tutorList/") 튜터 찾기
                    div(class="other")
                        a(id="2" href="../post/") 질문/답변
                    div(class="other") 
                        a(id="3" href="../findPost/") 찾아요
                    div(class="current")
                        a(id="4" href=".") 멘토링 목록
                    div(class="other")
                        a(id="5" href="../requestList/") 받은 요청
                    div(class="other")
                        a(id="6" href="../sendList/") 보낸 요청
        div(class="ChatList")
                div(class="chatArea" style = "overflow:auto;")
                    -if(rows!=null)
                        for item in rows
                            -if(item.chatUser_id==user_id)
                                div(class="ChatBubble")
                                    p(class="mymsg") #{item.content}
                            -else
                                div(class="ChatBubble2")
                                    p(class="othermsg") #{item.content}
                                    div(class="translateButton" onClick="translateText(this)")
                                        img(src="https://i.ibb.co/vw1bM4w/conversion.png")

                div(class="inputArea")
                        form(aciton="")
                                input(id = "m" placeholder="메세지를 입력해주세요.")
        div(class="myProfile")
            img(src="http://localhost:3000/"+"#{user.profileImage}" class="profileIcon")
            a(id="7" href="../myProfile/") 내 프로필
    script(src="http://localhost:3000/socket.io/socket.io.js")
    script(type="text/javascript").
        var socket = io.connect('http://localhost:3000/');
        var room_id = document.location.href.split('=')[1];
        var currentUser = "#{user_id}";
        console.log(socket)
        console.log(socket.on('loadUser'));
        socket.emit('join',room_id);
        var form = document.querySelector('form');
            socket.on('resultMessage',(user_id, msg) => {
            if(currentUser != user_id){
                var messages = document.querySelector('div.chatArea');
                var messageBubble = document.createElement('div');
                var messageTag = document.createElement("span");
                var translateButton = document.createElement("div");
                var image = document.createElement("img");
                image.src = "https://i.ibb.co/vw1bM4w/conversion.png";
                translateButton.className = "translateButton";
                translateButton.appendChild(image);
                messageTag.innerText = msg;
                messageTag.className = "othermsg";
                messageBubble.appendChild(messageTag);
                messageBubble.appendChild(translateButton);
                messageBubble.className = "ChatBubble2";
                messages.appendChild(messageBubble);
            }
        })
        form.onsubmit = (e) => {
            e.preventDefault();
            var messages = document.querySelector('div.chatArea');
            var messageBubble = document.createElement('div');
            var messageTag = document.createElement("span");
            var msginput = document.getElementById('m');
            messageTag.innerText = msginput.value;
            messageTag.className = "mymsg";
            messageBubble.appendChild(messageTag);
            messageBubble.className = "ChatBubble";
            messages.appendChild(messageBubble);
            socket.emit('message', room_id, currentUser, msginput.value);
            msginput.value = "";
        }
        const translateText = (data) => {
            var text = data.parentElement.getElementsByClassName("othermsg")[0].innerText;
            var lang = "#{user.country}";
            if(lang=='China') lang = 'zh-CN';
            if(lang=='Vietnam') lang = 'vi';
            axios.get('http://localhost:3000/detect',{
                    method: 'POST',
                    params: {
                        text : text
                    },
                    headers: {
                        'Content-Type': 'application/json',
                    },
            }).then(response=> { 
                if(response.data.langCode=='ko'){
                    axios.get('http://localhost:3000/innerTranslate',{
                        method: 'POST',
                        params: {
                            source : 'ko',
                            target : lang,
                            text : text
                        },
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    }).then(response2=>{
                        data.parentElement.getElementsByClassName("othermsg")[0].innerText = response2.data.message.result.translatedText;
                    })
                } else {
                    axios.get('http://localhost:3000/innerTranslate',{
                        method: 'POST',
                        params: {
                            source : response.data.langCode,
                            target : 'ko',
                            text : text
                        },
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    }).then(response2=>{
                        data.parentElement.getElementsByClassName("othermsg")[0].innerText = response2.data.message.result.translatedText;
                        console.log(data.parentElement.getElementsByClassName("othermsg")[0].innerText);
                        axios.get('http://localhost:3000/innerTranslate',{
                        method: 'POST',
                        params: {
                            source : 'ko',
                            target : lang,
                            text : data.parentElement.getElementsByClassName("othermsg")[0].innerText
                        },
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    }).then(response3=>{
                        data.parentElement.getElementsByClassName("othermsg")[0].innerText = response3.data.message.result.translatedText;
                    })
                    })
                }
            })
        }
        const testTrans = () => {
            var lang = "#{user.country}"
            if(lang=="China") {
               var text = document.querySelector('div.menu_group').innerText;
               var text2 = document.querySelector('div.myProfile a').innerText;
               console.log(text);
                axios.get('http://localhost:3000/translate',{
                    method: 'POST',
                    params: {
                        target : 'zh-CN',
                        text : text +'\n' + text2
                    },
                    headers: {
                        'Content-Type': 'application/json',
                    },
                }).then(response=> {
                    var list = response.data.message.result.translatedText.split('\n');
                    console.log(list);
                    for(var i = 1; i<= 7; i++) {
                        document.getElementById(i).textContent = list[i-1];
                    }
                })
            }  else if(lang=="Vietnam") {
                var text = document.querySelector('div.menu_group').innerText;
                var text2 = document.querySelector('div.myProfile a').innerText;
                    axios.get('http://localhost:3000/translate',{
                        method: 'POST',
                        params: {
                            target : 'vi',
                            text : text +'\n' + text2
                        },
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    }).then(response=> {
                        var list = response.data.message.result.translatedText.split('\n');
                        for(var i = 1; i<= 7; i++) {
                            document.getElementById(i).textContent = list[i-1];
                        }
                    })
            }
        }
        testTrans();
